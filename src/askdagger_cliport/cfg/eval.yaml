# Evaluation

defaults:
  - _self_
  - config

hydra:
  run:
    dir: ${root_dir}

mode: test # 'val' or 'test'

eval:
  pier: True # use pier

  s_desired: 0.9 # desired sensitivity

  drop_prob: 0.0 # dropout probability
  N: 1 # number of dropout evaluations

  log: False

  measure: 'entropy' # ['confidence', 'margin', 'entropy', 'vote_entropy', 'consensus_entropy', 'kl', 'jeffreys', 'prediction_variance', 'conservative_confidence']
  gpu: [0]

# eval settings
iteration: 0 # iteration of evaluation
agent: cliport
n_demos: 100 # number of val instances
train_demos: 0 # training demos used to train model
interactive_demos: 300 # number of interactive demos
relabeling_demos: True # collect demos by relabeling
validation_demos: True # collect demos by validating novice actions
save_results: True # write results to json
update_results: False # overwrite existing json results?
checkpoint_type: interactive=${interactive_demos} #'val_missing' # 'val_missing' or 'test_best'
val_on_heldout: True
n_workers: 1 # number of workers for data loading
update_every_episode: False # update every episode or only when collecting a demo

disp: False
shared_memory: False
eval_task: put-block-in-bowl-seen-colors # task to evaluate the model on
model_task: put-block-in-bowl-seen-colors # task the model was trained on (e.g. multi-language-conditioned or packing-boxes-pairs-seen-colors)

# paths
model_dir: ${root_dir}
exp_folder: exps
data_dir: ${root_dir}/data
assets_root: ${root_dir}/src/askdagger_cliport/environments/assets/

model_path: ${model_dir}/${exp_folder}/${model_task}-${agent}-n${train_demos}-train/${iteration}/checkpoints # path to pre-trained models
train_config: ${model_dir}/${exp_folder}/${model_task}-${agent}-n${train_demos}-train/${iteration}/.hydra/config.yaml # path to train config
save_path: ${model_dir}/${exp_folder}/${eval_task}-${agent-n${train_demos}-train/${iteration}/checkpoints # path to save results
results_path: ${model_dir}/${exp_folder}/${eval_task}-${agent}-n${train_demos}-train/${iteration}/checkpoints # path to existing results


# record videos (super slow)
record:
  save_video: False
  save_video_path: ${model_dir}/${exp_folder}/${eval_task}-${agent}-n${train_demos}-train/${iteration}/videos/
  add_text: True
  fps: 20
  video_height: 640
  video_width: 720
